#chat-screen {
  /* 채팅창 배경색을 입힌다. */
  background-color: #abc1d1;
  height: 500vh;
}

#chat-screen .alt-header,
#chat-screen .status-bar {
  /* status bar나 header 뒤에 오는 것들이 안 보이게 하기 위해서
    top을 0으로 postion을 fixed로 배경색을 채팅창 배경색과 같게 하고
    너비를 100 퍼센트로 했다. */
  top: 0;
  position: fixed;
  background-color: #abc1d1;
  width: 100%;

  box-sizing: border-box;
  /* z-index는 layer 같은 것이다.
  z-index는 절대적인 위치(absolute position)나
  고정된 위치(fixed position)에 대해서 설정할 수 있다. */
  /* z-index를 0으로 하면 다른 요소들을 가린다. 
  1로 하면 가장 위에 오게 된다. */
  z-index: 1;
}

@keyframes fadeIn {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: none;
    opacity: 1;
  }
}

.main-chat {
  /* status bar와 header는 main 부분을 덮고 있다.
    덮고 있는 영역을 고려해서 margin-top 값을 정했다. */
  margin-top: 180px;

  display: flex;
  flex-direction: column;
  align-items: center;
  animation: fadeIn 0.8s linear;
}

#chat-screen .status-bar {
  z-index: 2;
}

#chat-screen .alt-header {
  top: 10px;
  z-index: 1;
}

.chat_timestamp {
  color: white;
  background-color: #92a4b2;
  padding: 15px;
  border-radius: 25px;
  font-size: 14px;
  margin-bottom: 25px;
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
}

.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  margin-right: 10px;
}

.message__author {
  margin-bottom: 5px;
  display: block;
}

.message__author,
.message__time {
  opacity: 0.8;
  font-size: 14px;
}

.message__info {
  display: flex;
  align-items: flex-end;
}

.message__bubble {
  background-color: white;
  padding: 13px;
  font-size: 18px;
  border-radius: 15px;
  border-top-left-radius: 0px;
  margin-right: 5px;
}

.message-row--own {
  justify-content: flex-end;
}

.message-row--own .message__bubble {
  background-color: var(--yellow);
  border-top-right-radius: 0px;
  border-top-left-radius: 15px;
  margin-right: 0px;
  margin-left: 5px;
}

/* flex children의 순서를 변경해서 말풍선과 메시지의 위치를 변경한다.
order 변수는 display가 flex인 경우에 가능하다. */
.message-row--own .message__info {
  flex-direction: row-reverse;
}

.reply {
  position: fixed;
  bottom: 0;
  width: 100%;
  background-color: white;
  display: flex;
  justify-content: space-between;
  padding: 5px 25px;
  /* 위에 입력한 padding이 element를 안 보이게 하고 있어서
  보여주기 위해서 아래 코드를 입력한다. */
  box-sizing: border-box;
  align-items: center;
  transition: transform 0.3s ease-in-out;
}

.reply .reply__column:first-child {
  width: 10%;
}

.reply .reply__column:last-child {
  width: 90%;
  position: relative;
}

.reply i {
  opacity: 0.5;
}

.reply input {
  padding: 14px;
  width: 100%;
  border: var(--main-border);
  border-radius: 25px;
  box-sizing: border-box;
  transition: all 0.3s ease-in-out;
}

.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: 3px;
  top: 3px;
}

.reply__column:last-child > i {
  right: 50px;
  top: 15px;
}

.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.reply__column button i {
  opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
  outline: none;
}

.reply .reply__column:first-child,
.reply .fa-smile-wink,
.reply button {
  transition: opacity 0.3s ease-in-out;
}

/* focus-within은 reply 내부에 focus 된 element가 있는지 보는 것이다. 
reply 내부에 어떤 element가 focus 되어 있다면 .reply:focus-within가 참이 되고, 
.reply__column:first-child에 실행한다.*/
.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-wink,
.reply:focus-within button {
  opacity: 0;
}

.reply input:focus {
  width: 98vw;

  /* 입력 상자가 제자리에서 너비만 변경되도록 위쪽으로 오게 만든다. */
  /* translateY(-80px) -> 입력 상자를 올린다. */
  transform: translateX(-13%) translateY(-80px);
}

.reply:focus-within {
  /* translateY(80px) -> 입력 상자를 내린다. */
  transform: translateY(80px);
}
